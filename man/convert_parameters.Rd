% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_parameters.R
\name{convert_parameters}
\alias{convert_parameters}
\title{Converts model parameters to standard PhenoFlex format}
\usage{
convert_parameters(par, failure_return = "MEIGO")
}
\arguments{
\item{par}{vector of length 12 with the parameters in the following order:
yc, zc, s1, Tu, theta_star, theta_c, tau, pie_c, Tf, Tc, Tb, slope}

\item{failure_return}{character, by default set to "MEIGO". Decides what should be returned if the conversion failed.
In case of "MEIGO" it returns a MEIGO-compatible output, indicating that the
current parameters are not suitable. If set equal "Ignore Error" it will return the
best estimate. If set equal "NA" it will return NA instead.}
}
\value{
vector of length 12, with the PhenoFlex parameters yc, zc, s1, Tu, E0, E1, A0, A1, Tf, Tc, Tb, slope
with given temperature data and model parameters.
}
\description{
Takes parameters, including intermediate parameters of chill submodel and transform them
to the typical PhenoFlex format.
}
\details{
The changed parameters are theta_star, theta_c, tau and pie_c, which get converted
to E0, E1, A0 and A1. In case of A0 and A1 two conversion functions are used.
For E0 and E1 a nonlinear system is solved using the function \link[nleqslv]{nleqslv}.

The conversion follows the approach documented in Fishman et al (1987) and Egea et al. (2021).
For more details consult equations 5 - 8 in Egea et al (2021)
}
\examples{
\dontrun{
par_old <-   c(40, 190, 0.5, 25, 279, 286.1, 47.7, 28, 4, 36, 4, 1.60)
par_new <- convert_parameters(par)
}
}
\author{
Lars Caspersen, \email{lars.caspersen@uni-bonn.de}
}
\keyword{PhenoFlex}
